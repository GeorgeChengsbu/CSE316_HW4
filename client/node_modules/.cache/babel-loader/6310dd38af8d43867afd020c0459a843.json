{"ast":null,"code":"var _jsxFileName = \"/Users/george/Downloads/Top5Lists_HW4/client/src/components/EditToolbar.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport Button from '@mui/material/Button';\nimport UndoIcon from '@mui/icons-material/Undo';\nimport RedoIcon from '@mui/icons-material/Redo';\nimport CloseIcon from '@mui/icons-material/HighlightOff';\n/*\n    This toolbar is a functional React component that\n    manages the undo/redo/close buttons.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditToolbar() {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  let undoStatus = true;\n\n  if (store.canUndo()) {\n    undoStatus = false;\n  }\n\n  function handleUndo() {\n    store.undo();\n  }\n\n  function handleRedo() {\n    store.redo();\n  }\n\n  function handleClose() {\n    store.closeCurrentList();\n  }\n\n  let editStatus = false;\n\n  if (store.isItemNameEditActive) {\n    editStatus = true;\n  }\n\n  console.log(editStatus);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      disabled: undoStatus,\n      id: \"undo-button\",\n      onClick: handleUndo,\n      variant: \"contained\",\n      children: /*#__PURE__*/_jsxDEV(UndoIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: editStatus,\n      id: \"redo-button\",\n      onClick: handleRedo,\n      variant: \"contained\",\n      children: /*#__PURE__*/_jsxDEV(RedoIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: editStatus,\n      id: \"close-button\",\n      onClick: handleClose,\n      variant: \"contained\",\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditToolbar, \"73C7T2gc7osE0gOE4ApLm9/B7dk=\");\n\n_c = EditToolbar;\nexport default EditToolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditToolbar\");","map":{"version":3,"sources":["/Users/george/Downloads/Top5Lists_HW4/client/src/components/EditToolbar.js"],"names":["useContext","GlobalStoreContext","Button","UndoIcon","RedoIcon","CloseIcon","EditToolbar","store","undoStatus","canUndo","handleUndo","undo","handleRedo","redo","handleClose","closeCurrentList","editStatus","isItemNameEditActive","console","log"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAYP,UAAU,CAACC,kBAAD,CAA5B;AACA,MAAIO,UAAU,GAAG,IAAjB;;AACA,MAAGD,KAAK,CAACE,OAAN,EAAH,EAAoB;AAChBD,IAAAA,UAAU,GAAG,KAAb;AACH;;AACD,WAASE,UAAT,GAAsB;AAClBH,IAAAA,KAAK,CAACI,IAAN;AACH;;AACD,WAASC,UAAT,GAAsB;AAClBL,IAAAA,KAAK,CAACM,IAAN;AACH;;AACD,WAASC,WAAT,GAAuB;AACnBP,IAAAA,KAAK,CAACQ,gBAAN;AACH;;AACD,MAAIC,UAAU,GAAG,KAAjB;;AACA,MAAIT,KAAK,CAACU,oBAAV,EAAgC;AAC5BD,IAAAA,UAAU,GAAG,IAAb;AACH;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,sBACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,4BACI,QAAC,MAAD;AACI,MAAA,QAAQ,EAAER,UADd;AAEI,MAAA,EAAE,EAAC,aAFP;AAGI,MAAA,OAAO,EAAEE,UAHb;AAII,MAAA,OAAO,EAAC,WAJZ;AAAA,6BAKQ,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,MAAD;AACI,MAAA,QAAQ,EAAEM,UADd;AAEI,MAAA,EAAE,EAAC,aAFP;AAGI,MAAA,OAAO,EAAEJ,UAHb;AAII,MAAA,OAAO,EAAC,WAJZ;AAAA,6BAKQ,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,YARJ,eAeI,QAAC,MAAD;AACI,MAAA,QAAQ,EAAEI,UADd;AAEI,MAAA,EAAE,EAAC,cAFP;AAGI,MAAA,OAAO,EAAEF,WAHb;AAII,MAAA,OAAO,EAAC,WAJZ;AAAA,6BAKQ,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GA7CQR,W;;KAAAA,W;AA+CT,eAAeA,WAAf","sourcesContent":["import { useContext } from 'react'\nimport { GlobalStoreContext } from '../store'\nimport Button from '@mui/material/Button';\nimport UndoIcon from '@mui/icons-material/Undo';\nimport RedoIcon from '@mui/icons-material/Redo';\nimport CloseIcon from '@mui/icons-material/HighlightOff';\n\n/*\n    This toolbar is a functional React component that\n    manages the undo/redo/close buttons.\n    \n    @author McKilla Gorilla\n*/\nfunction EditToolbar() {\n    const { store } = useContext(GlobalStoreContext);\n    let undoStatus = true;\n    if(store.canUndo()) {\n        undoStatus = false;\n    }\n    function handleUndo() {\n        store.undo();\n    }\n    function handleRedo() {\n        store.redo();\n    }\n    function handleClose() {\n        store.closeCurrentList();\n    }\n    let editStatus = false;\n    if (store.isItemNameEditActive) {\n        editStatus = true;\n    }  \n    console.log(editStatus);\n    return (\n        <div id=\"edit-toolbar\">\n            <Button \n                disabled={undoStatus}\n                id='undo-button'\n                onClick={handleUndo}\n                variant=\"contained\">\n                    <UndoIcon />\n            </Button>\n            <Button \n                disabled={editStatus}\n                id='redo-button'\n                onClick={handleRedo}\n                variant=\"contained\">\n                    <RedoIcon />\n            </Button>\n            <Button \n                disabled={editStatus}\n                id='close-button'\n                onClick={handleClose}\n                variant=\"contained\">\n                    <CloseIcon />\n            </Button>\n        </div>\n    )\n}\n\nexport default EditToolbar;"]},"metadata":{},"sourceType":"module"}