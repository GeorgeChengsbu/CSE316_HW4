{"ast":null,"code":"var _jsxFileName = \"/Users/george/Downloads/Top5Lists_HW4/client/src/components/Top5Item.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\n/*\n    This React component represents a single item in our\n    Top 5 List, which can be edited or moved around.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Top5Item(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const [draggedTo, setDraggedTo] = useState(0);\n  const [text, setText] = useState(\"\");\n  const {\n    idNamePair,\n    selected\n  } = props;\n\n  function handleDragStart(event, targetId) {\n    event.dataTransfer.setData(\"item\", targetId);\n  }\n\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  function handleDragEnter(event) {\n    event.preventDefault();\n    console.log(\"entering\");\n    setDraggedTo(true);\n  }\n\n  function handleDragLeave(event) {\n    event.preventDefault();\n    console.log(\"leaving\");\n    setDraggedTo(false);\n  }\n\n  function handleDrop(event, targetId) {\n    event.preventDefault();\n    let sourceId = event.dataTransfer.getData(\"item\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n    setDraggedTo(false);\n    console.log(\"handleDrop (sourceId, targetId): ( \" + sourceId + \", \" + targetId + \")\"); // UPDATE THE LIST\n\n    store.addMoveItemTransaction(sourceId, targetId);\n  }\n\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    toggleEdit();\n  }\n\n  function toggleEdit() {\n    let newActive = !editActive;\n\n    if (newActive) {\n      store.setIsItemEditActive();\n    }\n\n    setEditActive(newActive);\n  }\n\n  let editStatus = false;\n\n  if (store.isItemEditActive) {\n    editStatus = true;\n  }\n\n  console.log(editStatus);\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      let index = event.target.id.substring(\"list-\".length);\n      let text = event.target.value;\n      store.addUpdateItemTransaction(index - 1, text);\n      toggleEdit();\n    }\n  }\n\n  function handleUpdateText(event) {\n    setText(event.target.value);\n  }\n\n  let {\n    index\n  } = props;\n  let itemClass = \"top5-item\";\n\n  if (draggedTo) {\n    itemClass = \"top5-item-dragged-to\";\n  }\n\n  let itemElement = /*#__PURE__*/_jsxDEV(ListItem, {\n    id: 'item-' + (index + 1),\n    className: itemClass,\n    onDragStart: event => {\n      handleDragStart(event, index + 1);\n    },\n    onDragOver: event => {\n      handleDragOver(event, index + 1);\n    },\n    onDragEnter: event => {\n      handleDragEnter(event, index + 1);\n    },\n    onDragLeave: event => {\n      handleDragLeave(event, index + 1);\n    },\n    onDrop: event => {\n      handleDrop(event, index + 1);\n    },\n    draggable: \"true\",\n    sx: {\n      display: 'flex',\n      p: 1\n    },\n    style: {\n      fontSize: '48pt',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"edit\",\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n          style: {\n            fontSize: '48pt'\n          },\n          onClick: handleToggleEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 1,\n        flexGrow: 1\n      },\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 1\n    }, this)]\n  }, props.key, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 18\n  }, this);\n\n  if (editActive) {\n    itemElement = /*#__PURE__*/_jsxDEV(TextField, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: 'item-' + (index + 1),\n      label: \"List Item #\" + (index + 1),\n      name: \"name\",\n      autoComplete: \"Top 5 List Name\",\n      className: itemClass,\n      onKeyPress: handleKeyPress,\n      onChange: handleUpdateText,\n      defaultValue: props.text,\n      inputProps: {\n        style: {\n          fontSize: 48\n        }\n      },\n      InputLabelProps: {\n        style: {\n          fontSize: 24\n        }\n      },\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n  }\n\n  return itemElement;\n}\n\n_s(Top5Item, \"XpXKEorMqSbTxBPMynkyPuRVcQA=\");\n\n_c = Top5Item;\nexport default Top5Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Top5Item\");","map":{"version":3,"sources":["/Users/george/Downloads/Top5Lists_HW4/client/src/components/Top5Item.js"],"names":["React","useContext","useState","GlobalStoreContext","TextField","Box","ListItem","IconButton","EditIcon","Top5Item","props","store","editActive","setEditActive","draggedTo","setDraggedTo","text","setText","idNamePair","selected","handleDragStart","event","targetId","dataTransfer","setData","handleDragOver","preventDefault","handleDragEnter","console","log","handleDragLeave","handleDrop","sourceId","getData","substring","indexOf","addMoveItemTransaction","handleToggleEdit","stopPropagation","toggleEdit","newActive","setIsItemEditActive","editStatus","isItemEditActive","handleKeyPress","code","index","target","id","length","value","addUpdateItemTransaction","handleUpdateText","itemClass","itemElement","display","p","fontSize","width","flexGrow","key","style"],"mappings":"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","sourcesContent":["import { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store'\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\n/*\n    This React component represents a single item in our\n    Top 5 List, which can be edited or moved around.\n    \n    @author McKilla Gorilla\n*/\nfunction Top5Item(props) {\n    const { store } = useContext(GlobalStoreContext);\n    const [editActive, setEditActive] = useState(false);\n    const [draggedTo, setDraggedTo] = useState(0);\n    const [ text, setText ] = useState(\"\");\n    const { idNamePair, selected } = props;\n\n    function handleDragStart(event, targetId) {\n        event.dataTransfer.setData(\"item\", targetId);\n    }\n\n    function handleDragOver(event) {\n        event.preventDefault();\n    }\n\n    function handleDragEnter(event) {\n        event.preventDefault();\n        console.log(\"entering\");\n        setDraggedTo(true);\n    }\n\n    function handleDragLeave(event) {\n        event.preventDefault();\n        console.log(\"leaving\");\n        setDraggedTo(false);\n    }\n\n    function handleDrop(event, targetId) {\n        event.preventDefault();\n        let sourceId = event.dataTransfer.getData(\"item\");\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n        setDraggedTo(false);\n\n        console.log(\"handleDrop (sourceId, targetId): ( \" + sourceId + \", \" + targetId + \")\");\n\n        // UPDATE THE LIST\n        store.addMoveItemTransaction(sourceId, targetId);\n    }\n\n    function handleToggleEdit(event) {\n        event.stopPropagation();\n        toggleEdit();\n    }\n    function toggleEdit() {\n        let newActive = !editActive;\n        if (newActive) {\n            store.setIsItemEditActive();\n        }\n        setEditActive(newActive);\n    }\n    let editStatus = false;\n    if (store.isItemEditActive) {\n        editStatus = true;\n    }\n    console.log(editStatus);\n    function handleKeyPress(event) {\n        if (event.code === \"Enter\") {\n            let index = event.target.id.substring(\"list-\".length);\n            let text = event.target.value;\n            store.addUpdateItemTransaction(index-1, text);\n            toggleEdit();\n        }\n    }\n    function handleUpdateText(event) {\n        setText(event.target.value );\n    }\n    let { index } = props;\n\n    let itemClass = \"top5-item\";\n    if (draggedTo) {\n        itemClass = \"top5-item-dragged-to\";\n    }\nlet itemElement =<ListItem\nid={'item-' + (index+1)}\nkey={props.key}\nclassName={itemClass}\nonDragStart={(event) => {\n    handleDragStart(event, (index+1))\n}}\nonDragOver={(event) => {\n    handleDragOver(event, (index+1))\n}}\nonDragEnter={(event) => {\n    handleDragEnter(event, (index+1))\n}}\nonDragLeave={(event) => {\n    handleDragLeave(event, (index+1))\n}}\nonDrop={(event) => {\n    handleDrop(event, (index+1))\n}}\ndraggable=\"true\"\nsx={{ display: 'flex', p: 1 }}\nstyle={{\n    fontSize: '48pt',\n    width: '100%'\n}}\n>\n<Box sx={{ p: 1 }}>\n<IconButton aria-label='edit'>\n    <EditIcon style={{fontSize:'48pt'}}\n    onClick={handleToggleEdit}  />\n    \n</IconButton>\n</Box>\n<Box sx={{ p: 1, flexGrow: 1 }}>{props.text}</Box>\n</ListItem>;\n    if (editActive) {\n        itemElement =\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id={'item-' +(index+1)}\n                label={\"List Item #\" +(index +1)}\n                name=\"name\"\n                autoComplete=\"Top 5 List Name\"\n                className={itemClass}\n                onKeyPress={handleKeyPress}\n                onChange={handleUpdateText}\n                defaultValue={props.text}\n                inputProps={{style: {fontSize: 48}}}\n                InputLabelProps={{style: {fontSize: 24}}}\n                autoFocus\n            />\n    }\n    return (\n        itemElement\n    )\n}\n\nexport default Top5Item;"]},"metadata":{},"sourceType":"module"}